syntax = program;
program = | statement, ";", program ;
statement = object declaration | trait declaration | function | expression;

expression = if | assignment | start1, next1 ;

start1 = start2, next2;
next1 = "&&" , expression | "||" , expression | ;

start2 = start3, next3;
next2 = "==" , start1 | "!=" , start1 | "<" , start1 | ">" , start1 | "<=" , start1 | ">=" , start1 | ;

start3 = "-" , start2 | start4, next4;
next3 = ;

start4 = start5, next5;
next4 =  "+" , start3 | "-"  , start3 | ;

start5 = start6, next6;
next5 = "*" , start4 | "/" , start4 | ;

start6 = paren;
next6 = "++" , start5 | invoke | ;

invoke = "(", invoke inner, ")";
invoke inner = expression, invoke list | ;
invoke list = ",", expression, invoke list | ;

paren = "(", expression, ")" | value | block ;
block = "{", block inner, "}";
block inner = | expression, ";" , block inner;
value = dice literal | natural literal | bool literal | string literal | list literal | object creation;
assignment = name, assignment option
assignment option = "=", expression | ;
name = low id , field reference | base , field reference | this, field reference;
field reference = "." , up id | ;


list literal = "[" , inner list , "]";
inner list = expression, inner list cont | ;
inner list cont = "," , expression, inner list cont | ;

if = "if", expression, "then", expression, "else", expression;

object declaration = up id, base list, obj inner ;
base list = "extends", up id, trait list | ;
trait list start = "with", up id, trait list next | ;
trait list next = "and", up id, trait list next | ;
fields = field, field list | ;
fields list = ",", field, field list
field = up id, ":", expression;

obj inner = "{", fields, "}";

trait declaration = "trait", up id, trait requirements, obj inner;
trait requirements = "for", up id | ;

object creation = "new", up id, trait list start;

function = "fun", low id, "(", function parameters, ")", block;
function parameters = low id, ":", up id | ;

base = "base";
this = "this";
low id = "id";
up id = "Id";
bool literal = "bool";
natural literal = "natural";
dice literal = "dice";
string literal = "string";